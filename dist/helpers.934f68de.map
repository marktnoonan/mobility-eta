{"version":3,"sources":["js/helpers.js"],"names":["today","username","toLowerCase","console","log","Date","getFullYear","getMonth","length","getDate","convertTimeToMinutes","time","split","hours","minutes","parseInt","getCurrentTime","date","getHours","getMinutes","convertFromMilitaryTime","standardHours","period","charAt","substring","dateHelper","days","months","prettyDate","getDay"],"mappings":";;;;;;;;;kBAAe;AACdA,MADc,iBACRC,QADQ,EACE;AACf;AACA,MAAIA,SAASC,WAAT,OAA2B,MAA/B,EAAuC;AACtCC,WAAQC,GAAR,CAAY,qBAAZ;AACA,UAAO,YAAP,CAFsC,CAElB;AACpB,GAHD,MAGO;AACN,OAAMJ,QAAQ,IAAIK,IAAJ,EAAd;AACA,UAAUL,MAAMM,WAAN,EAAV,UACCN,MAAMO,QAAN,CAAeC,MAAf,GAAwB,EAAxB,GAA6B,CAA7B,GAAiC,EADlC,KAEGR,MAAMO,QAAN,KAAmB,CAFtB,UAE2BP,MAAMS,OAAN,EAF3B;AAGA;AACD,EAZa;AAcdC,qBAdc,gCAcOC,IAdP,EAca;AAAA,oBACHA,KAAKC,KAAL,CAAW,GAAX,CADG;AAAA;AAAA,MACrBC,KADqB;AAAA,MACdC,OADc;;AAE1B,SAAOC,SAASF,KAAT,IAAkB,EAAlB,GAAuBE,SAASD,OAAT,CAA9B;AACA,EAjBa;AAmBdE,eAnBc,4BAmBG;AAChB,MAAMC,OAAO,IAAIZ,IAAJ,EAAb;AACA,SAAUY,KAAKC,QAAL,EAAV,SAA6BD,KAAKE,UAAL,EAA7B;AACA,EAtBa;AAwBdC,wBAxBc,mCAwBUT,IAxBV,EAwBgB;AAAA,qBACJA,KAAKC,KAAL,CAAW,GAAX,CADI;AAAA;AAAA,MACtBC,KADsB;AAAA,MACfC,OADe;;AAE7B,MAAIO,gBAAgBR,QAAQ,EAAR,GAAaA,QAAQ,EAArB,GAA0BA,KAA9C;AACA,MAAIS,SAAST,QAAQ,EAAR,GAAa,IAAb,GAAoB,IAAjC;AACA,MAAIA,QAAQ,EAAR,IAAcQ,cAAcE,MAAd,CAAqB,CAArB,MAA4B,GAA9C,EAAmD;AAClDF,mBAAgBA,cAAcG,SAAd,CAAwB,CAAxB,CAAhB;AACA;AACD,SAAUH,aAAV,SAA2BP,OAA3B,SAAsCQ,MAAtC;AACA,EAhCa;;;AAkCdG,aAAY;AACXC,QAAM,CACL,QADK,EAEL,QAFK,EAGL,SAHK,EAIL,WAJK,EAKL,UALK,EAML,QANK,EAOL,UAPK,CADK;AAUXC,UAAQ,CACP,SADO,EAEP,UAFO,EAGP,OAHO,EAIP,OAJO,EAKP,KALO,EAMP,MANO,EAOP,MAPO,EAQP,QARO,EASP,WATO,EAUP,SAVO,EAWP,UAXO,EAYP,UAZO,CAVG;AAwBXC,YAxBW,sBAwBAX,IAxBA,EAwBM;AAChB,UAAU,KAAKS,IAAL,CAAUT,KAAKY,MAAL,EAAV,CAAV,UACC,KAAKF,MAAL,CAAYV,KAAKV,QAAL,EAAZ,CADD,SAEIU,KAAKR,OAAL,EAFJ;AAGA;AA5BU;AAlCE","file":"helpers.934f68de.map","sourceRoot":"..","sourcesContent":["export default {\n\ttoday(username) {\n\t\t//matches the format in MARTA's data\n\t\tif (username.toLowerCase() === 'test') {\n\t\t\tconsole.log('test user logged in')\n\t\t\treturn '2018-04-10' // important for demo\n\t\t} else {\n\t\t\tconst today = new Date()\n\t\t\treturn `${today.getFullYear()}-${\n\t\t\t\ttoday.getMonth.length < 10 ? 0 : ''\n\t\t\t}${today.getMonth() + 1}-${today.getDate()}`\n\t\t}\n\t},\n\n\tconvertTimeToMinutes(time) {\n\t\tlet [hours, minutes] = time.split(':')\n\t\treturn parseInt(hours) * 60 + parseInt(minutes)\n\t},\n\n\tgetCurrentTime() {\n\t\tconst date = new Date()\n\t\treturn `${date.getHours()}:${date.getMinutes()}`\n\t},\n\n\tconvertFromMilitaryTime(time) {\n\t\tconst [hours, minutes] = time.split(':')\n\t\tlet standardHours = hours > 12 ? hours % 12 : hours\n\t\tlet period = hours < 12 ? 'AM' : 'PM'\n\t\tif (hours < 12 && standardHours.charAt(0) === '0') {\n\t\t\tstandardHours = standardHours.substring(1)\n\t\t}\n\t\treturn `${standardHours}:${minutes} ${period}`\n\t},\n\n\tdateHelper: {\n\t\tdays: [\n\t\t\t'Sunday',\n\t\t\t'Monday',\n\t\t\t'Tuesday',\n\t\t\t'Wednesday',\n\t\t\t'Thursday',\n\t\t\t'Friday',\n\t\t\t'Saturday'\n\t\t],\n\t\tmonths: [\n\t\t\t'January',\n\t\t\t'February',\n\t\t\t'March',\n\t\t\t'April',\n\t\t\t'May',\n\t\t\t'June',\n\t\t\t'July',\n\t\t\t'August',\n\t\t\t'September',\n\t\t\t'October',\n\t\t\t'November',\n\t\t\t'December'\n\t\t],\n\t\tprettyDate(date) {\n\t\t\treturn `${this.days[date.getDay()]}, ${\n\t\t\t\tthis.months[date.getMonth()]\n\t\t\t} ${date.getDate()}`\n\t\t}\n\t}\n}\n"]}